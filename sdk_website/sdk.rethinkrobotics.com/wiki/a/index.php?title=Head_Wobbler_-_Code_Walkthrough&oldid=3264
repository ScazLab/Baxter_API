<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Head Wobbler - Code Walkthrough - sdk-wiki</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Head_Wobbler_-_Code_Walkthrough","wgTitle":"Head Wobbler - Code Walkthrough","wgCurRevisionId":3264,"wgRevisionId":3264,"wgArticleId":426,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Head_Wobbler_-_Code_Walkthrough","wgRelevantArticleId":426,"wgRequestId":"79b865a78ee2d008656ad299","wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":["autoconfirmed"],"wgRestrictionMove":["autoconfirmed"]});mw.loader.state({"site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","site":"ready","user.options":"ready","user.tokens":"loading","ext.pygments":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready"});mw.loader.implement("user.tokens@01doy7a",function($,jQuery,require,module){/*@nomin*/mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});
});mw.loader.load(["mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","skins.cavendishmw-rethinkrobotics"]);});</script>
<link rel="stylesheet" href="load.php?debug=false&amp;lang=en&amp;modules=ext.pygments%257Cmediawiki.legacy.commonPrint%252Cshared%257Cmediawiki.sectionAnchor&amp;only=styles&amp;skin=cavendishmw-rethinkrobotics"/>
<script async="" src="load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=cavendishmw-rethinkrobotics"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=cavendishmw-rethinkrobotics"/>
<meta name="generator" content="MediaWiki 1.31.0"/>
<meta name="robots" content="noindex,nofollow"/>
<link rel="shortcut icon" href="../../favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="http://sdk.rethinkrobotics.com/wiki/a/opensearch_desc.php" title="sdk-wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="http://sdk.rethinkrobotics.com/wiki/a/api.php?action=rsd"/>
<link rel="alternate" type="application/atom+xml" title="sdk-wiki Atom feed" href="http://sdk.rethinkrobotics.com/wiki/a/index.php?title=Special:RecentChanges&amp;feed=atom"/>
<!--[if lt IE 9]><script src="/wiki/a/load.php?debug=false&amp;lang=en&amp;modules=html5shiv&amp;only=scripts&amp;skin=cavendishmw-rethinkrobotics&amp;sync=1"></script><![endif]-->
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Head_Wobbler_-_Code_Walkthrough rootpage-Head_Wobbler_-_Code_Walkthrough skin-cavendishmw-rethinkrobotics action-view"><div id="container"><!-- start fragment header -->
    <!-- <div id="mozilla-org"><a href="#">Mozilla Skin</a></div> -->
    <div id="header" class="noprint">
        <a name="top" id="contentTop"></a>

        <!-- Logo + site name -->
        <h1>
            <a href="../../wiki" style="text-indent: 2em; width: 194px; height: 67px; background: transparent url(skins/cavendishmw-rethinkrobotics/styles/images/header_logo.png) no-repeat scroll 5px -5px;" title="Visit the main page">&nbsp;</a>        </h1>

	<div id="rr_ActionWrap">
	<!-- Account action links -->
	<div id="accountActions"><a href="http://sdk-accounts.rethinkrobotics.com/public/NewUser">Create account</a><a href="http://sdk.rethinkrobotics.com/wiki/a/index.php?title=Special:UserLogin&amp;returnto=Head+Wobbler+-+Code+Walkthrough&amp;returntoquery=oldid%3D3264">Log in</a></div>
        <!-- Search box -->
            <form action="http://sdk.rethinkrobotics.com/wiki/a/index.php" id="searchform">
        <label for="searchInput">Search</label>
        <input type='hidden' name="title" value="Special:Search"/>
        <input type="search" name="search" placeholder="Search sdk-wiki" title="Search sdk-wiki [f]" accesskey="f" id="searchInput"/>
        &#160;
        <input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton"/>    </form>
	</div>
    </div> <!-- End header div -->
<!-- end fragment header --><div id="mBody"><!-- start fragment mainContent -->
<!-- start fragment firstHeader -->
<div id="firstHeadingDiv" class="firstHeading">
    <h1 lang="en"><span dir="auto">Head Wobbler - Code Walkthrough</span></h1>


        <!-- Content action buttons -->
        <ul><li><a href="index.php?title=Head_Wobbler_-_Code_Walkthrough&amp;oldid=3264#">More</a><ul><li id="ca-viewsource"><a href="index.php?title=Head_Wobbler_-_Code_Walkthrough&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></li><li id="ca-history"><a href="index.php?title=Head_Wobbler_-_Code_Walkthrough&amp;action=history" title="Past revisions of this page [h]" accesskey="h">History</a></li></ul></li><li id="ca-nstab-main" class="selected"><a href="../Head_Wobbler_-_Code_Walkthrough" title="View the content page [c]" accesskey="c">Page</a></li></ul>
</div><!-- end fragment firstHeader --><!-- start fragment sidebar -->        <div id="side" class="noprint" > <!-- cavendishmw: s/column-one/side/ -->
            <ul id="nav">
                      <li><span>Navigation</span>
            <ul>
                <li id="n-Getting-Started"><a href="../Getting_Started">Getting Started</a></li>
                <li id="n-Learning"><a href="../Learning">Learning</a></li>
                <li id="n-Community"><a href="../Community">Community</a></li>
                <li id="n-Support"><a href="../Support">Support</a></li>
            </ul>
        </li>
      <li><span>Links</span>
            <ul class="collapsible-collapsed">
                <li id="n-Forum"><a href="https://groups.google.com/a/rethinkrobotics.com/forum/#!forum/brr-users" rel="nofollow">Forum</a></li>
                <li id="n-Source"><a href="https://github.com/RethinkRobotics" rel="nofollow">Source</a></li>
                <li id="n-Source-API"><a href="http://api.rethinkrobotics.com/" rel="nofollow">Source API</a></li>
            </ul>
        </li>
      <li><span>Tools</span>
            <ul class="collapsible-collapsed">
                <li id="n-All-Pages"><a href="../Special:AllPages">All Pages</a></li>
                <li id="n-Upload-File"><a href="../Special:Upload">Upload File</a></li>
                <li id="n-What-Links-Here.3F"><a href="../Special:WhatLinksHere">What Links Here?</a></li>
            </ul>
        </li>
            </ul> <!-- /nav -->
        </div> <!-- /side -->
<!-- end fragment sidebar -->
<div id="mainContent"> <!-- cavendishmw: s/column-content/mainContent/ -->
    
  <div id="bodyContent" class="mw-body">
    <div id="siteSub">From sdk-wiki</div>
    <div id="contentSub"><div class="mw-revision"><div id="mw-revision-info">Revision as of 15:13, 29 July 2014 by <a href="http://sdk.rethinkrobotics.com/wiki/a/index.php?title=User:Sdkuser&amp;action=edit&amp;redlink=1" class="new mw-userlink" title="User:Sdkuser (page does not exist)"><bdi>Sdkuser</bdi></a> <span class="mw-usertoollinks">(<a href="http://sdk.rethinkrobotics.com/wiki/a/index.php?title=User_talk:Sdkuser&amp;action=edit&amp;redlink=1" class="new mw-usertoollinks-talk" title="User talk:Sdkuser (page does not exist)">talk</a> | <a href="http://sdk.rethinkrobotics.com/wiki/Special:Contributions/Sdkuser" class="mw-usertoollinks-contribs" title="Special:Contributions/Sdkuser">contribs</a>)</span> <span class="comment">(Protected &quot;<a href="../Head_Wobbler_-_Code_Walkthrough" title="Head Wobbler - Code Walkthrough">Head Wobbler - Code Walkthrough</a>&quot;: Setting Permissions for (almost all) Pages - editable and moveable by all logged in users ([Edit=Allow only autoconfirmed users] (indefinite) [Move=Allow only autoconfirmed users] (indefinite)))</span></div><div id="mw-revision-nav">(<a href="http://sdk.rethinkrobotics.com/wiki/a/index.php?title=Head_Wobbler_-_Code_Walkthrough&amp;diff=prev&amp;oldid=3264" title="Head Wobbler - Code Walkthrough">diff</a>) <a href="http://sdk.rethinkrobotics.com/wiki/a/index.php?title=Head_Wobbler_-_Code_Walkthrough&amp;direction=prev&amp;oldid=3264" title="Head Wobbler - Code Walkthrough">← Older revision</a> | Latest revision (diff) | Newer revision → (diff)</div></div></div>
    <div id="jump-to-nav" class="mw-jump">Jump to: <a href="index.php?title=Head_Wobbler_-_Code_Walkthrough&amp;oldid=3264#column-one">navigation</a>, <a href="index.php?title=Head_Wobbler_-_Code_Walkthrough&amp;oldid=3264#searchInput">search</a></div>
    
  <!-- start content -->
  <div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="mw-parser-output"><div style="padding:5px; border:1px solid #ffcc00; background:#FFFDDF; margin-bottom:0.2em; Font-size:140%;"><a href="../Head_Movement_Example" title="Head Movement Example"><img alt="Back.png" src="images/b/b9/Back.png" width="29" height="20" /></a> <a href="../Head_Movement_Example" title="Head Movement Example">Head Movement Example</a></div>
<h2><span class="mw-headline" id="Introduction">Introduction</span></h2>
<p>This example demonstrates ability to move Baxter's head by nodding and panning its head to random angles for 10 seconds.The code consists of a <code>main()</code> function that initializes the ros node and creates an instance of the <code>Wobbler</code> class. In the <code>__init__()</code> function, an instance of the head interface is created. The <code>wobble()</code> function is then called, which performs a single head nod before panning the head to random angles for 10 seconds.<br />
<b>Interfaces</b> -
</p>
<div style="column-count:3;-moz-column-count:3;-webkit-column-count:3">
<ul><li>Head.set_pan(&lt;<i>double</i>&gt;)</li>
<li>Head.command_nod()</li>
<li>Head.pan()</li></ul>
</div>
<h2><span class="mw-headline" id="Code_Walkthrough">Code Walkthrough</span></h2>
<p>Now, let's break down the code.
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="lineno">30 </span><span class="kn">import</span> <span class="nn">argparse</span>
<span class="lineno">31 </span><span class="kn">import</span> <span class="nn">random</span>
<span class="lineno">32 </span>
<span class="lineno">33 </span><span class="kn">import</span> <span class="nn">rospy</span>
<span class="lineno">34 </span>
<span class="lineno">35 </span><span class="kn">import</span> <span class="nn">baxter_interface</span>
<span class="lineno">36 </span>
<span class="lineno">37 </span><span class="kn">from</span> <span class="nn">baxter_interface</span> <span class="kn">import</span> <span class="n">CHECK_VERSION</span>
</pre></div>
<p>This imports the baxter interface for accessing the Head class. The <code>CHECK_VERSION</code> is imported to check if the software running on the robot would be compatible with this local version. It is not necessary to check the version in custom programs.
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="lineno">40 </span> <span class="k">class</span> <span class="nc">Wobbler</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<span class="lineno">41 </span>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="lineno">42 </span>        <span class="sd">&quot;&quot;&quot;</span>
<span class="lineno">43 </span><span class="sd">        &#39;Wobbles&#39; the head</span>
<span class="lineno">44 </span><span class="sd">        &quot;&quot;&quot;</span>
<span class="lineno">45 </span>        <span class="bp">self</span><span class="o">.</span><span class="n">_done</span> <span class="o">=</span> <span class="bp">False</span>
<span class="lineno">46 </span>        <span class="bp">self</span><span class="o">.</span><span class="n">_head</span> <span class="o">=</span> <span class="n">baxter_interface</span><span class="o">.</span><span class="n">Head</span><span class="p">()</span>
</pre></div>
<p>The <code>_head</code> is an object of the Head class within the baxter_interface. This creates a subscriber to the topic <code>robot/head/head_state</code> and publishers to the topics <code>robot/head/command_head_pan</code>, <code>robot/head/command_head_nod</code>. The object <code>_head</code>, would be used to control the head nodding and panning.
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="lineno">49 </span>        <span class="c1"># verify robot is enabled</span>
<span class="lineno">50 </span>        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;Getting robot state... &quot;</span><span class="p">)</span>
<span class="lineno">51 </span>        <span class="bp">self</span><span class="o">.</span><span class="n">_rs</span> <span class="o">=</span> <span class="n">baxter_interface</span><span class="o">.</span><span class="n">RobotEnable</span><span class="p">(</span><span class="n">CHECK_VERSION</span><span class="p">)</span>
<span class="lineno">52 </span>        <span class="bp">self</span><span class="o">.</span><span class="n">_init_state</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_rs</span><span class="o">.</span><span class="n">state</span><span class="p">()</span><span class="o">.</span><span class="n">enabled</span>
<span class="lineno">53 </span>        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;Enabling robot... &quot;</span><span class="p">)</span>
<span class="lineno">54 </span>        <span class="bp">self</span><span class="o">.</span><span class="n">_rs</span><span class="o">.</span><span class="n">enable</span><span class="p">()</span>
<span class="lineno">55 </span>        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;Running. Ctrl-c to quit&quot;</span><span class="p">)</span>
</pre></div>
<p><code>baxter_interface.RobotEnable(CHECK_VERSION)</code> checks if the sdk version updated in the settings is compatible with the sdk version loaded on the param server of the Robot and creates an object <code>_rs</code> of the <code>RobotEnable</code> class. The next line sets the <code>_init_state</code> of the robot to its current state. The <code>enable()</code> performs the actual enabling of the robot. It is important to note that the robot should be in enabled state before attempting to move its joints.
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="lineno">57 </span>     <span class="k">def</span> <span class="nf">clean_shutdown</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="lineno">58 </span>        <span class="sd">&quot;&quot;&quot;</span>
<span class="lineno">59 </span><span class="sd">        Exits example cleanly by moving head to neutral position and</span>
<span class="lineno">60 </span><span class="sd">        maintaining start state</span>
<span class="lineno">61 </span><span class="sd">        &quot;&quot;&quot;</span>
<span class="lineno">62 </span>        <span class="k">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">Exiting example...&quot;</span><span class="p">)</span>
<span class="lineno">63 </span>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_done</span><span class="p">:</span>
<span class="lineno">64 </span>            <span class="bp">self</span><span class="o">.</span><span class="n">set_neutral</span><span class="p">()</span>
<span class="lineno">65 </span>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_init_state</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">_rs</span><span class="o">.</span><span class="n">state</span><span class="p">()</span><span class="o">.</span><span class="n">enabled</span><span class="p">:</span>
<span class="lineno">66 </span>            <span class="k">print</span><span class="p">(</span><span class="s2">&quot;Disabling robot...&quot;</span><span class="p">)</span>
<span class="lineno">67 </span>            <span class="bp">self</span><span class="o">.</span><span class="n">_rs</span><span class="o">.</span><span class="n">disable</span><span class="p">()</span>
</pre></div>
<p>This function performs a clean shutdown of the program. The <code>_done</code> variable gets updated once the head finishes its wobbling. Then, the head is moved to its neutral position and checks if the <code>_init_state</code> was in disabled state and the current state is enabled. If so, it resets the robot to the disable state.
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="lineno">69 </span>    <span class="k">def</span> <span class="nf">set_neutral</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="lineno">70 </span>        <span class="sd">&quot;&quot;&quot;</span>
<span class="lineno">71 </span><span class="sd">        Sets the head back into a neutral pose</span>
<span class="lineno">72 </span><span class="sd">        &quot;&quot;&quot;</span>
<span class="lineno">73 </span>        <span class="bp">self</span><span class="o">.</span><span class="n">_head</span><span class="o">.</span><span class="n">set_pan</span><span class="p">(</span><span class="mf">0.0</span><span class="p">)</span>
</pre></div>
<p>The <code>set_pan</code> function moves the head to the desired joint position. It employs a PID position controller to move the head joint to that position. In order to move the head to the neutral position, the pan is set to 0.
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="lineno">75 </span>    <span class="k">def</span> <span class="nf">wobble</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="lineno">76 </span>        <span class="bp">self</span><span class="o">.</span><span class="n">set_neutral</span><span class="p">()</span>
<span class="lineno">77 </span>        <span class="sd">&quot;&quot;&quot;</span>
<span class="lineno">78 </span><span class="sd">        Performs the wobbling</span>
<span class="lineno">79 </span><span class="sd">        &quot;&quot;&quot;</span>
<span class="lineno">80 </span>        <span class="bp">self</span><span class="o">.</span><span class="n">_head</span><span class="o">.</span><span class="n">command_nod</span><span class="p">()</span>
<span class="lineno">81 </span>        <span class="n">command_rate</span> <span class="o">=</span> <span class="n">rospy</span><span class="o">.</span><span class="n">Rate</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="lineno">82 </span>        <span class="n">control_rate</span> <span class="o">=</span> <span class="n">rospy</span><span class="o">.</span><span class="n">Rate</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
<span class="lineno">83 </span>        <span class="n">start</span> <span class="o">=</span> <span class="n">rospy</span><span class="o">.</span><span class="n">get_time</span><span class="p">()</span>
</pre></div>
<p>This is where the actual wobbling happens. Before the robot starts to wobble its head, it moves its head to the neutral position. The <code>command_nod()</code> performs a single nod of the head by publishing on the <code>robot/head/command_head_nod</code> topic.
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="lineno">86 </span>        <span class="k">while</span> <span class="ow">not</span> <span class="n">rospy</span><span class="o">.</span><span class="n">is_shutdown</span><span class="p">()</span> <span class="ow">and</span> <span class="p">(</span><span class="n">rospy</span><span class="o">.</span><span class="n">get_time</span><span class="p">()</span> <span class="o">-</span> <span class="n">start</span> <span class="o">&lt;</span> <span class="mf">10.0</span><span class="p">):</span>
<span class="lineno">87 </span>            <span class="n">angle</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="o">-</span><span class="mf">1.5</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">)</span>
</pre></div>
<p>This retrieves a random floating point number between -1.5 and 1.5. These random angles are generated for 10 seconds.
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="lineno">84 </span>            <span class="k">while</span> <span class="p">(</span><span class="ow">not</span> <span class="n">rospy</span><span class="o">.</span><span class="n">is_shutdown</span><span class="p">()</span> <span class="ow">and</span>
<span class="lineno">85 </span>                   <span class="ow">not</span> <span class="p">(</span><span class="nb">abs</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_head</span><span class="o">.</span><span class="n">pan</span><span class="p">()</span> <span class="o">-</span> <span class="n">angle</span><span class="p">)</span> <span class="o">&lt;=</span>
<span class="lineno">86 </span>                       <span class="n">baxter_interface</span><span class="o">.</span><span class="n">HEAD_PAN_ANGLE_TOLERANCE</span><span class="p">)):</span>
</pre></div>
<p>This ensures that it loops till the current head pan position and the random angle generated above is within the <code>HEAD_PAN_ANGLE_TOLERANCE</code>
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="lineno">89 </span>                <span class="bp">self</span><span class="o">.</span><span class="n">_head</span><span class="o">.</span><span class="n">set_pan</span><span class="p">(</span><span class="n">angle</span><span class="p">,</span> <span class="n">speed</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="lineno">90 </span>                <span class="n">control_rate</span><span class="o">.</span><span class="n">sleep</span><span class="p">()</span>
<span class="lineno">91 </span>            <span class="n">command_rate</span><span class="o">.</span><span class="n">sleep</span><span class="p">()</span>
</pre></div>
<p>This publishes the corresponding position and the speed to the <code>robot/head/command_head_pan</code>
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="lineno">93 </span>        <span class="bp">self</span><span class="o">.</span><span class="n">_done</span> <span class="o">=</span> <span class="bp">True</span>
<span class="lineno">94 </span>        <span class="n">rospy</span><span class="o">.</span><span class="n">signal_shutdown</span><span class="p">(</span><span class="s2">&quot;Example finished.&quot;</span><span class="p">)</span>
</pre></div>
<p>Once the wobbling is completed, the <code>_done</code> variable is updated as True and a shutdown signal is sent.
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="lineno"> 97 </span><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
<span class="lineno"> 98 </span>    <span class="sd">&quot;&quot;&quot;RSDK Head Example: Wobbler</span>
<span class="lineno"> 99 </span>
<span class="lineno">100 </span><span class="sd">    Nods the head and pans side-to-side towards random angles.</span>
<span class="lineno">101 </span><span class="sd">    Demonstrates the use of the baxter_interface.Head class.</span>
<span class="lineno">102 </span><span class="sd">    &quot;&quot;&quot;</span>
<span class="lineno">103 </span>    <span class="n">arg_fmt</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">RawDescriptionHelpFormatter</span>
<span class="lineno">104 </span>    <span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">formatter_class</span><span class="o">=</span><span class="n">arg_fmt</span><span class="p">,</span>
<span class="lineno">105 </span>                                     <span class="n">description</span><span class="o">=</span><span class="n">main</span><span class="o">.</span><span class="vm">__doc__</span><span class="p">)</span>
<span class="lineno">106 </span>    <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">(</span><span class="n">rospy</span><span class="o">.</span><span class="n">myargv</span><span class="p">()[</span><span class="mi">1</span><span class="p">:])</span>
<span class="lineno">107 </span>
<span class="lineno">108 </span>    <span class="k">print</span><span class="p">(</span><span class="s2">&quot;Initializing node... &quot;</span><span class="p">)</span>
<span class="lineno">109 </span>    <span class="n">rospy</span><span class="o">.</span><span class="n">init_node</span><span class="p">(</span><span class="s2">&quot;rsdk_head_wobbler&quot;</span><span class="p">)</span>
<span class="lineno">110 </span>
<span class="lineno">111 </span>    <span class="n">wobbler</span> <span class="o">=</span> <span class="n">Wobbler</span><span class="p">()</span>
</pre></div>
<p>An object of the <code>Wobbler</code> class is generated and this initializes the head interface, checks for the appropriate version and enables the robot.
</p>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="lineno">112 </span>    <span class="n">rospy</span><span class="o">.</span><span class="n">on_shutdown</span><span class="p">(</span><span class="n">wobbler</span><span class="o">.</span><span class="n">clean_shutdown</span><span class="p">)</span>
<span class="lineno">113 </span>    <span class="k">print</span><span class="p">(</span><span class="s2">&quot;Wobbling... &quot;</span><span class="p">)</span>
<span class="lineno">114 </span>    <span class="n">wobbler</span><span class="o">.</span><span class="n">wobble</span><span class="p">()</span>
<span class="lineno">115 </span>    <span class="k">print</span><span class="p">(</span><span class="s2">&quot;Done.&quot;</span><span class="p">)</span>
<span class="lineno">116 </span>
<span class="lineno">117 </span><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
<span class="lineno">118 </span>    <span class="n">main</span><span class="p">()</span>
</pre></div>
<p>The actual nodding and panning happens when the <code>wobble()</code> function is called.
</p>
<!-- 
NewPP limit report
Cached time: 20190815161433
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.056 seconds
Real time usage: 3.054 seconds
Preprocessor visited node count: 53/1000000
Preprocessor generated node count: 290/1000000
Post‐expand include size: 190/2097152 bytes
Template argument size: 42/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 14966/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.542      1 Template:Parent_header
100.00%    0.542      1 -total
-->
</div>
<!-- Saved in parser cache with key wikisdk:pcache:idhash:426-0!canonical and timestamp 20190815161430 and revision id 3264
 -->
</div><div class="printfooter">
Retrieved from "<a dir="ltr" href="index.php?title=Head_Wobbler_-_Code_Walkthrough&amp;oldid=3264">http://sdk.rethinkrobotics.com/wiki/a/index.php?title=Head_Wobbler_-_Code_Walkthrough&amp;oldid=3264</a>"</div>
  <div id="catlinks" class="catlinks catlinks-allhidden" data-mw="interface"></div>  <!-- end content -->
  
    <div class="visualClear"></div>
</div>
</div> <!-- /mainContent -->
<!-- end fragment mainContent --></div> <!-- /mBody --><div class="visualClear"></div><!-- start fragment footer -->    <div id="footer" role="contentinfo">
        <div id="f-poweredbyico">
                <a href="http://www.mediawiki.org/"><img src="resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/wiki/a/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /wiki/a/resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31"/></a>
            </div>
        <ul id="f-list">
                <li id="copywrite_notice">&copy; 2015 Rethink Robotics. All rights reserved.</li>
                <li id="special_pages"><a href="../Special:SpecialPages" title="Special:SpecialPages">SpecialPages</a></li>
                <li id="privacy"><a href="../Sdk-wiki:Privacy_policy" title="Sdk-wiki:Privacy policy">Privacy policy</a></li>
                <li id="about"><a href="../Sdk-wiki:About" title="Sdk-wiki:About">About sdk-wiki</a></li>
                <li id="disclaimer"><a href="../Sdk-wiki:General_disclaimer" title="Sdk-wiki:General disclaimer">Disclaimers</a></li>
            </ul>
    </div><!-- end fragment footer --></div><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.056","walltime":"3.054","ppvisitednodes":{"value":53,"limit":1000000},"ppgeneratednodes":{"value":290,"limit":1000000},"postexpandincludesize":{"value":190,"limit":2097152},"templateargumentsize":{"value":42,"limit":2097152},"expansiondepth":{"value":2,"limit":40},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":14966,"limit":5000000},"timingprofile":["100.00%    0.542      1 Template:Parent_header","100.00%    0.542      1 -total"]},"cachereport":{"timestamp":"20190815161433","ttl":86400,"transientcontent":false}}});});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":43});});</script></body></html>